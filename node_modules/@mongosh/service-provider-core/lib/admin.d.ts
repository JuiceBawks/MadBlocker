import ShellAuthOptions from './shell-auth-options';
import type { MongoClientOptions, ReadConcern, ReadPreference, WriteConcern, Document, CreateCollectionOptions, ClientSession, DbOptions, ClientSessionOptions, ListDatabasesOptions, AutoEncryptionOptions } from './all-transport-types';
import type { bson as BSON } from './index';
import { ReplPlatform } from './platform';
import { FLE } from './all-fle-types';
export default interface Admin {
    platform: ReplPlatform;
    initialDb: string;
    bsonLibrary: typeof BSON;
    listDatabases(database: string, options?: ListDatabasesOptions): Promise<Document>;
    getNewConnection(uri: string, options: MongoClientOptions): Promise<any>;
    getURI(): string | undefined;
    getConnectionInfo(): Promise<Document>;
    authenticate(authDoc: ShellAuthOptions): Promise<{
        ok: number;
    }>;
    createCollection(dbName: string, collName: string, options: CreateCollectionOptions, dbOptions?: DbOptions): Promise<{
        ok: number;
    }>;
    getReadPreference(): ReadPreference;
    getReadConcern(): ReadConcern | undefined;
    getWriteConcern(): WriteConcern | undefined;
    resetConnectionOptions(options: MongoClientOptions): Promise<void>;
    startSession(options: ClientSessionOptions): ClientSession;
    getRawClient(): any;
    fle?: FLE | undefined;
    getFleOptions?: () => AutoEncryptionOptions | undefined;
}
